@using Kendo.Mvc.UI
@using Planex.Data.Models
@model Planex.Web.Areas.Manager.Models.Projects.ProjectDetailsViewModel

<script type="text/x-kendo-tmpl" id="template">
    <div class="product">
        <img src="@Url.Content("~/content/web/foods/")#:ProductID#.jpg" alt="#:ProductName# image" />
        <h3>#:ProductName#</h3>
        <p>#:kendo.toString(UnitPrice, "c")#</p>
    </div>

</script>

@{
    ViewBag.Title = "Create project";
}

<br />
<div class="well k-content">
    <h2 class="well-title">Create project</h2>

    @using (Html.BeginForm())
    {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})
            </div>
        </div>
        @if (Model.State < TaskStateType.Started)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Start, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Start)
                    @Html.ValidationMessageFor(model => model.Start, "", new {@class = "text-danger"})
                </div>
            </div>
        }

        @if (Model.State >= TaskStateType.Started)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Start, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Start)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.End, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.End)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FinalPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.FinalPrice)
                </div>
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Kendo().DropDownList().Name("Priority").BindTo(Enum.GetNames(typeof(PriorityType)).ToList())
                @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LeadId, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @(Html.Kendo().DropDownListFor(model => model.LeadId).Name("LeadId")
                      .DataTextField("name").DataValueField("id")
                      .DataSource(source =>
                      {
                          source.Read(read =>
                          {
                              read.Action("GetAllLeadUsers", "Json");
                          })
                              .ServerFiltering(false);
                      }).Value(Model.LeadName)
                      )
            </div>
        </div>
        @Html.Partial("_DetailsFiles", Model.UploadedAttachmentFiles)
        <div class="form-group">
            <div class="col-md-2">

            </div>
            <div class="col-md-10">
                @(Html.Kendo().Upload().Name("UploadedAttachments"))
            </div>
        </div>
        <div class="form-group">
            <input type="submit" value="Edit" class="k-button"/>
            @Html.ActionLink("Remove", "Remove", new { id = Model.Id }, new { @class="k-button" })
            @if (Model.State == TaskStateType.Draft)
            {
                @Html.ActionLink("Send For Estimation", "SendForEstimation", new { id = Model.Id }, new { @class = "k-button" })
            }
            @if (Model.State == TaskStateType.Estimated)
            {
            @Html.ActionLink("Approve", "Approve", new { id = Model.Id }, new { @class = "k-button" })
            }
        </div>
    </div>
    }

    @if (Model.State >= TaskStateType.Estimated)
    {
        <div class="well k-content">
            <h2 class="well-title">Estimation</h2>
            @Html.Partial("_DetailsChart", Model)
        </div>
    }


</div>
