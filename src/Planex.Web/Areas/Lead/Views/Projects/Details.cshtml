@using Kendo.Mvc.UI
@using Planex.Web.Areas.Lead.Models
@using Planex.Web.Areas.Manager.Models
@using ProjectDetailsViewModel = Planex.Web.Areas.Lead.Models.ProjectDetailsViewModel

@(Html.Kendo().Gantt<ProjectDetailsViewModel, ProjectDetailsDependencyViewModel>()
    .Name("gantt")
    .Columns(columns =>
    {
        columns.Bound(c => c.TaskID).Title("ID").Width(50);
        columns.Bound("title").Editable(true).Sortable(true);
        columns.Bound("start").Title("Start Time").Format("{0:MM/dd/yyyy}").Width(100).Editable(true).Sortable(true);
        columns.Bound("end").Title("End Time").Format("{0:MM/dd/yyyy}").Width(100).Editable(true).Sortable(true);
        columns.Resources("Users").Editable(true).Title("Assigned Resources");
    })
    .Views(views =>
    {
        views.DayView();
        views.WeekView(weekView => weekView.Selected(true));
        views.MonthView();
    })
    .Height(700)
    .ShowWorkHours(false)
    .ShowWorkDays(false)
    .Snap(false)
    .DataSource(d => d
        .Model(m =>
        {
            m.Id(f => f.TaskID);
            m.ParentId(f => f.ParentID);
            m.OrderId(f => f.OrderId);
            m.Field(f => f.Expanded).DefaultValue(true);
        })
        .Read("ReadTasks", "Helper")
    //        .Create("CreateTask", "Gantt")
    //        .Destroy("DestroyTask", "Gantt")
    //        .Update("UpdateTask", "Gantt")
    )
    .DependenciesDataSource(d => d
        .Model(m =>
        {
            m.Id(f => f.DependencyID);
            m.PredecessorId(f => f.PredecessorID);
            m.SuccessorId(f => f.SuccessorID);
            m.Type(f => f.Type);
        })
        .Read("ReadDependencies", "Helper")
    //        .Create("CreateDependency", "Gantt")
    //        .Destroy("DestroyDependency", "Gantt")
    //        .Update("UpdateDependency", "Gantt")
    )
    .Resources(r => r
                .Field("Users")
                .DataColorField("Color")
                .DataTextField("Name")
                .DataSource(d => d
                    .Custom()
                    .Schema(s => s
                        .Model(m =>
                        {
                            m.Id("ID");
                        })
                        .Data("Data")
                    )
                    .Transport(t =>
                    {
                        t.Read("ReadResources", "Helper");
                    })
                )
            )
    .Assignments<ProjectDetailsAssignmentsViewModel>(a => a
        .DataTaskIdField("TaskID")
        .DataResourceIdField("ResourceID")
        .DataValueField("Units")
        .DataSource(d => d
            .Model(m =>
            {
                m.Id(f => f.ID);
            })
            .Read("ReadAssignments", "Helper")
//            .Create("CreateAssignment", "Gantt")
//            .Destroy("DestroyAssignment", "Gantt")
//            .Update("UpdateAssignment", "Gantt")
        )
    )
)